%!PS-Adobe-2.0 EPSF-2.0
%%Title: pairing.hyp.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3c
%%CreationDate: Wed Mar 20 11:28:33 2002
%%For: rsnbrg@yanshuf (Arnold L. Rosenberg,[],[],)
%%BoundingBox: 0 0 332 327
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 327 moveto 0 0 lineto 332 0 lineto 332 327 lineto closepath clip newpath
-31.0 396.0 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<808080804040404020202020101010100808080804040404
	020202020101010180808080404040402020202010101010
	080808080404040402020202010101018080808040404040
	202020201010101008080808040404040202020201010101
	808080804040404020202020101010100808080804040404
	0202020201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
45.000 slw
n 1200 1200 m 1200 6000 l
 6000 6000 l gs col0 s gr 
% Polyline
n 900 5700 m
 1200 5700 l gs col0 s gr 
% Polyline
n 900 5400 m
 1200 5400 l gs col0 s gr 
% Polyline
n 900 5100 m
 1200 5100 l gs col0 s gr 
% Polyline
n 900 4800 m
 1200 4800 l gs col0 s gr 
% Polyline
n 900 4500 m
 1200 4500 l gs col0 s gr 
% Polyline
n 900 4200 m
 1200 4200 l gs col0 s gr 
% Polyline
n 900 3600 m
 1200 3600 l gs col0 s gr 
% Polyline
n 900 3000 m
 1200 3000 l gs col0 s gr 
% Polyline
n 900 2700 m
 1200 2700 l gs col0 s gr 
% Polyline
n 900 2400 m
 1200 2400 l gs col0 s gr 
% Polyline
n 900 2100 m
 1200 2100 l gs col0 s gr 
% Polyline
n 900 1800 m
 1200 1800 l gs col0 s gr 
% Polyline
n 900 1500 m
 1200 1500 l gs col0 s gr 
% Polyline
n 900 1200 m
 1200 1200 l gs col0 s gr 
% Polyline
n 900 3900 m
 1200 3900 l gs col0 s gr 
% Polyline
n 900 3300 m
 1200 3300 l gs col0 s gr 
% Polyline
n 1500 6300 m
 1500 6000 l gs col0 s gr 
% Polyline
n 1800 6300 m
 1800 6000 l gs col0 s gr 
% Polyline
n 2100 6300 m
 2100 6000 l gs col0 s gr 
% Polyline
n 2400 6300 m
 2400 6000 l gs col0 s gr 
% Polyline
n 2700 6300 m
 2700 6000 l gs col0 s gr 
% Polyline
n 3000 6300 m
 3000 6000 l gs col0 s gr 
% Polyline
n 3300 6300 m
 3300 6000 l gs col0 s gr 
% Polyline
n 3600 6300 m
 3600 6000 l gs col0 s gr 
% Polyline
n 3900 6300 m
 3900 6000 l gs col0 s gr 
% Polyline
n 4200 6300 m
 4200 6000 l gs col0 s gr 
% Polyline
n 4500 6300 m
 4500 6000 l gs col0 s gr 
% Polyline
n 4800 6300 m
 4800 6000 l gs col0 s gr 
% Polyline
n 5100 6300 m
 5100 6000 l gs col0 s gr 
% Polyline
n 5400 6300 m
 5400 6000 l gs col0 s gr 
% Polyline
n 5700 6300 m
 5700 6000 l gs col0 s gr 
% Polyline
n 6000 6300 m
 6000 6000 l gs col0 s gr 
% Polyline
30.000 slw
n 1200 1200 m 1500 1200 l 1500 6000 l 1200 6000 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 80.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 3600 m 1800 3600 l 1800 6000 l 1500 6000 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 100.00 240.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 4500 m 2100 4500 l 2100 6000 l 1800 6000 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 120.00 300.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 4800 m 2400 4800 l 2400 6000 l 2100 6000 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 140.00 320.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 5100 m 2700 5100 l 2700 6000 l 2400 6000 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 160.00 340.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2700 5400 m 3600 5400 l 3600 6000 l 2700 6000 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 180.00 360.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3600 5700 m 6000 5700 l 6000 6000 l 3600 6000 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 240.00 380.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 3600 m
 1500 3600 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 80.00 240.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 3900 m
 1800 3900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 80.00 260.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 4200 m
 1800 4200 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 80.00 280.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 4500 m
 1800 4500 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 80.00 300.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 4800 m
 2100 4800 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 80.00 320.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 5100 m
 2400 5100 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 80.00 340.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 5400 m
 2700 5400 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 80.00 360.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 5700 m
 3600 5700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 80.00 380.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3000 5400 m
 3000 6000 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 200.00 360.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3300 5400 m
 3300 6000 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 220.00 360.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 3300 m
 1500 3300 l gs col0 s gr 
% Polyline
n 1200 3000 m
 1500 3000 l gs col0 s gr 
% Polyline
n 1200 2700 m
 1500 2700 l gs col0 s gr 
% Polyline
n 1200 2400 m
 1500 2400 l gs col0 s gr 
% Polyline
n 1200 2100 m
 1500 2100 l gs col0 s gr 
% Polyline
n 1200 1800 m
 1500 1800 l gs col0 s gr 
% Polyline
n 1200 1500 m
 1500 1500 l gs col0 s gr 
% Polyline
n 3900 6000 m
 3900 5700 l gs col0 s gr 
% Polyline
n 4200 6000 m
 4200 5700 l gs col0 s gr 
% Polyline
n 4500 6000 m
 4500 5700 l gs col0 s gr 
% Polyline
n 4800 6000 m
 4800 5700 l gs col0 s gr 
% Polyline
n 5100 6000 m
 5100 5700 l gs col0 s gr 
% Polyline
n 5400 6000 m
 5400 5700 l gs col0 s gr 
% Polyline
n 5700 6000 m
 5700 5700 l gs col0 s gr 
% Polyline
2 slj
15.000 slw
n 1500 1200 m 1500 1201 l 1500 1203 l 1501 1207 l 1501 1212 l 1502 1221 l
 1503 1232 l 1505 1247 l 1506 1265 l 1509 1287 l 1511 1313 l
 1514 1342 l 1517 1375 l 1521 1412 l 1525 1452 l 1529 1496 l
 1534 1542 l 1539 1592 l 1544 1644 l 1550 1698 l 1556 1754 l
 1562 1813 l 1568 1872 l 1575 1934 l 1582 1996 l 1589 2059 l
 1596 2123 l 1603 2188 l 1610 2253 l 1618 2319 l 1626 2386 l
 1634 2453 l 1642 2520 l 1651 2588 l 1659 2657 l 1668 2726 l
 1677 2796 l 1687 2867 l 1697 2939 l 1707 3011 l 1717 3084 l
 1728 3158 l 1740 3232 l 1751 3307 l 1763 3381 l 1775 3456 l
 1788 3529 l 1800 3600 l 1820 3709 l 1839 3809 l 1857 3899 l
 1874 3979 l 1890 4047 l 1904 4105 l 1916 4153 l 1927 4191 l
 1937 4221 l 1945 4245 l 1952 4262 l 1959 4275 l 1965 4283 l
 1970 4289 l 1975 4294 l 1980 4297 l 1985 4301 l 1990 4305 l
 1996 4311 l 2002 4320 l 2009 4331 l 2017 4346 l 2025 4364 l
 2035 4387 l 2045 4413 l 2055 4443 l 2067 4475 l 2078 4509 l
 2089 4543 l 2100 4575 l 2106 4593 l 2111 4609 l 2116 4623 l
 2120 4635 l 2124 4645 l 2127 4653 l 2129 4660 l 2130 4664 l
 2131 4667 l 2132 4669 l 2131 4668 l 2130 4666 l 2129 4663 l
 2127 4658 l 2125 4653 l 2122 4648 l 2120 4641 l 2117 4634 l
 2114 4627 l 2110 4619 l 2107 4611 l 2103 4602 l 2100 4594 l
 2097 4585 l 2093 4576 l 2090 4568 l 2086 4559 l 2083 4551 l
 2080 4543 l 2078 4535 l 2075 4528 l 2073 4521 l 2071 4514 l
 2070 4508 l 2069 4503 l 2068 4498 l 2068 4494 l 2069 4491 l
 2070 4488 l 2071 4487 l 2073 4486 l 2076 4486 l 2080 4487 l
 2084 4489 l 2089 4492 l 2094 4496 l 2100 4500 l 2116 4513 l
 2133 4527 l 2150 4542 l 2165 4557 l 2179 4570 l 2191 4582 l
 2201 4592 l 2210 4602 l 2218 4610 l 2225 4619 l 2233 4628 l
 2241 4637 l 2251 4648 l 2263 4661 l 2278 4677 l 2296 4695 l
 2318 4717 l 2343 4742 l 2370 4770 l 2400 4800 l 2429 4830 l
 2456 4857 l 2478 4881 l 2494 4901 l 2505 4916 l 2510 4928 l
 2511 4936 l 2509 4942 l 2505 4947 l 2500 4950 l 2495 4953 l
 2493 4958 l 2493 4964 l 2498 4972 l 2510 4984 l 2529 4999 l
 2558 5019 l 2596 5043 l 2644 5070 l 2700 5100 l 2741 5120 l
 2782 5139 l 2821 5157 l 2857 5173 l 2888 5188 l 2915 5201 l
 2937 5211 l 2953 5220 l 2965 5228 l 2973 5234 l 2977 5238 l
 2979 5242 l 2978 5245 l 2977 5248 l 2975 5250 l 2974 5252 l
 2974 5255 l 2978 5258 l 2985 5262 l 2997 5266 l 3015 5272 l
 3040 5280 l 3073 5289 l 3116 5299 l 3170 5312 l 3234 5327 l
 3310 5343 l 3396 5361 l 3494 5380 l 3600 5400 l 3670 5412 l
 3742 5425 l 3814 5437 l 3888 5449 l 3961 5460 l 4035 5472 l
 4108 5483 l 4180 5493 l 4252 5503 l 4324 5513 l 4394 5523 l
 4464 5532 l 4533 5541 l 4602 5549 l 4670 5558 l 4738 5566 l
 4805 5574 l 4872 5582 l 4938 5590 l 5004 5597 l 5069 5604 l
 5133 5611 l 5197 5618 l 5259 5625 l 5321 5632 l 5381 5638 l
 5440 5644 l 5497 5650 l 5552 5656 l 5604 5661 l 5654 5666 l
 5701 5671 l 5745 5675 l 5786 5679 l 5823 5683 l 5856 5686 l
 5886 5689 l 5912 5691 l 5934 5694 l 5952 5695 l 5967 5697 l
 5979 5698 l 5987 5699 l 5993 5699 l 5997 5700 l 5999 5700 l

 6000 5700 l gs col0 s gr 
/NewCenturySchlbk-Bold ff 240.00 scf sf
1425 6600 m
gs 1 -1 sc (1) col0 sh gr
/NewCenturySchlbk-Bold ff 240.00 scf sf
675 5775 m
gs 1 -1 sc (1) col0 sh gr
/NewCenturySchlbk-Bold ff 240.00 scf sf
2625 6600 m
gs 1 -1 sc (5) col0 sh gr
/NewCenturySchlbk-Bold ff 240.00 scf sf
4050 6600 m
gs 1 -1 sc (10) col0 sh gr
/NewCenturySchlbk-Bold ff 240.00 scf sf
5550 6600 m
gs 1 -1 sc (15) col0 sh gr
/NewCenturySchlbk-Bold ff 240.00 scf sf
525 1575 m
gs 1 -1 sc (15) col0 sh gr
/NewCenturySchlbk-Bold ff 240.00 scf sf
525 3075 m
gs 1 -1 sc (10) col0 sh gr
/NewCenturySchlbk-Bold ff 240.00 scf sf
675 4575 m
gs 1 -1 sc (5) col0 sh gr
/NewCenturySchlbk-BoldItalic ff 300.00 scf sf
3225 3300 m
gs 1 -1 sc (n = ) col0 sh gr
/NewCenturySchlbk-Bold ff 270.00 scf sf
3750 3300 m
gs 1 -1 sc (16) col0 sh gr
$F2psEnd
rs
end
